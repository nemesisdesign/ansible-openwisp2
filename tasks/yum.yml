---

- name: Install epel-release (if RedHat/Centos)
  when: ansible_distribution in ['RedHat', 'CentOS']
  yum: name=epel-release
  notify: reload systemd
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install python3.6 on CentOS 7
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7'
  package: name= {{ item }}
  with_items:
    - https://centos7.iuscommunity.org/ius-release.rpm
    - python36
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install system packages
  package: name={{ item }}
  notify:
    - reload systemd
    - start redis
  with_items:
    - sudo
    - gcc
    - supervisor
    - nginx
    - openssl
    - openssl-devel
    - libffi-devel
    - python36-devel
    - redis
    - redhat-rpm-config
    - cronie
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install python2 system packages
  when: ansible_python_interpreter == "/usr/bin/python"
  package: name={{ item }}
  notify:
    - reload systemd
  with_items:
    - libsemanage-python
    - policycoreutils-python
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install python3 system packages
  when: ansible_python_interpreter == "/usr/bin/python3"
  package: name={{ item }}
  notify:
    - reload systemd
  with_items:
    - libsemanage-python3
    - policycoreutils-python3
  retries: 5
  delay: 10
  register: result
  until: result is success

# On the newer versions of redis, by default redis
# binds to localhost on ipv6 address which wouldn't
# let the service start if the server doesn't have
# ipv6 enabled. Hence, we set redis to listen on ipv4
- name: set redis to listen on ipv4 (RedHat & CentOS)
  notify: start redis
  lineinfile:
    path: /etc/redis.conf
    regexp: '^bind 127\.0\.0\.1 ::1'
    line: 'bind 127.0.0.1'
    backrefs: yes

# Fedora 28 and above drops the package python-firewall
# and it gets replaced by python3-firewall
- name: Install python2 firewall packages
  when: ansible_python_interpreter == "/usr/bin/python"
  package: name={{ item }} state=present
  notify: reload systemd
  with_items:
    - python-firewall
    - firewalld
  ignore_errors: yes
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install python3 firewall packages
  when: ansible_python_interpreter == "/usr/bin/python3"
  package: name={{ item }} state=present
  notify: reload systemd
  with_items:
    - python3-firewall
    - firewalld
  ignore_errors: yes
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install spatialite
  when: openwisp2_database.engine == "django.contrib.gis.db.backends.spatialite"
  package: name={{ item }}
  notify: reload systemd
  with_items:
    - sqlite
    - gdal
    - proj-devel
    - geos-devel
    - libspatialite-devel
  ignore_errors: yes
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: ensure supervisor is started
  service: name=supervisord state=started enabled=yes

- name: ensure nginx is enabled
  service: name=nginx enabled=yes

- name: Install python2 packages
  when: openwisp2_python in ["python2.7", "python2"]
  package: name={{ item }}
  with_items:
    - python-pip
    - python-virtualenv
  ignore_errors: yes
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install python3 packages
  when: openwisp2_python == "python3"
  package: name={{ item }}
  with_items:
    - "{{ python3_package_prefix }}"
    - "{{ python3_package_prefix }}-pip"
    - "{{ python3_package_prefix }}-devel"
  ignore_errors: yes
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install python wheel (optional, allowed to fail)
  ignore_errors: yes
  package: name={{ item }}
  with_items:
    - python-wheel
    - "{{ python3_package_prefix }}-wheel"
  retries: 1
  delay: 10
  register: result
  until: result is success

- name: Install python3 virtualenv
  when: openwisp2_python == "python3" and ansible_distribution == 'Fedora'
  package: name={{ python3_package_prefix }}-virtualenv
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: (CentOS/RedHat) Always install pip
  when: ansible_distribution in ['RedHat', 'CentOS']
  package: name=python-pip
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: (CentOS/RedHat/Fedora) Install/upgrade virtualenv via pip
  pip: name=virtualenv state=latest
  retries: 5
  delay: 10
  register: result
  until: result is success

- name: Install ntp
  when: openwisp2_install_ntp
  package: name=ntp
  retries: 5
  delay: 10
  register: result
  until: result is success
