- name: Set openwisp2_python_packages
  set_fact:
    openwisp2_python_packages: []

- name: Set custom package list
  set_fact:
    openwisp2_python_packages: "{{ openwisp2_python_packages  + [item] }}"
  with_items:
    - "{{ openwisp2_controller_pip }}"
    - "{{ openwisp2_users_pip }}"
    - "{{ openwisp2_django_netjsonconfig_pip }}"
    - "{{ openwisp2_django_x509_pip }}"
    - "{{ openwisp2_django_loci_pip }}"
    - "{{ openwisp2_netjsonconfig_pip }}"
  when: item != false

- name: Add network_topology to custom package list if set and enabled
  set_fact:
    openwisp2_python_packages:"{{ openwisp2_python_packages + [item] }}"
  with_items:
    - "{{ openwisp2_django_netjsongraph_pip }}"
    - "{{ openwisp2_network_topology_pip }}"
  when: item != false and openwisp2_network_topology

- name: Update pip & related tools
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  with_items:
    - pip
    - setuptools
    - wheel

- name: Install openwisp2 controller and its dependencies
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  with_items:
    - openwisp-controller
    # add asgi_redis for websockets
    - asgi_redis
    - service_identity
    # django-redis for caching
    - django-redis
  notify: reload supervisor

- name: Install openwisp2 network topology and its dependencies
  when: openwisp2_network_topology
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  with_items:
    - openwisp-network-topology
  notify: reload supervisor

- name: Install custom OpenWISP 2 Python packages
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor
  with_items:
    - "{{ openwisp2_python_packages }}"

- name: Install extra python packages
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  with_items: "{{ openwisp2_extra_python_packages }}"
  notify: reload supervisor

- name: Install uwsgi
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  with_items:
    - uwsgi
  notify: reload supervisor

- name: Install psycopg2
  when: openwisp2_database.engine in ["django.db.backends.postgresql", "django.contrib.gis.db.backends.postgis"]
  pip:
    name: psycopg2
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor

- name: Install MySQL-python
  when: openwisp2_database.engine in ["django.db.backends.mysql", "django.contrib.gis.db.backends.mysql"]
  pip:
    name: MySQL-python
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor

- name: Install raven (sentry client)
  when: openwisp2_sentry.get('dsn') != False
  pip:
    name: raven
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor

- name: Install CORS
  when: "{{ cors.enabled }}"
  pip:
    name: django-cors-headers
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor