- set_fact:
    openwisp2_python_packages: ["{{ openwisp2_controller_pip }}" , "{{ openwisp2_users_pip }}" , "{{ openwisp2_django_netjsonconfig_pip }}", "{{ openwisp2_django_x509_pip }}", "{{ openwisp2_netjsonconfig_pip }}","{{ openwisp2_django_netjsongraph_pip }}"]

- name: Add network_topology to package list if enabled
  when: openwisp2_network_topology
  set_fact:
    openwisp2_python_packages: "{{ openwisp2_python_packages }} + [ '{{ openwisp2_network_topology_pip }}' ]"



- name: Update pip & related tools
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  with_items:
    - pip
    - setuptools
    - wheel

- name: Install OpenWISP2 Python packages
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor
  with_items:
    - "{{ openwisp2_python_packages }}"


- name: Install extra python packages
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  with_items: "{{ openwisp2_extra_python_packages }}"
  notify: reload supervisor

- name: Install uwsgi
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  with_items:
    - uwsgi
  notify: reload supervisor

- name: Install psycopg2
  when: openwisp2_database.engine in ["django.db.backends.postgresql", "django.contrib.gis.db.backends.postgis"]
  pip:
    name: psycopg2
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor

- name: Install MySQL-python
  when: openwisp2_database.engine in ["django.db.backends.mysql", "django.contrib.gis.db.backends.mysql"]
  pip:
    name: MySQL-python
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor

- name: Install raven (sentry client)
  when: openwisp2_sentry.get('dsn') != False
  pip:
    name: raven
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ openwisp2_python }}"
    virtualenv_site_packages: yes
  notify: reload supervisor
